/**
 * @format
 */

import {AppRegistry} from 'react-native';
import App from './App';
import {name as appName} from './app.json';
import messaging from '@react-native-firebase/messaging';
import PushNotification from 'react-native-push-notification';

AppRegistry.registerComponent(appName, () => App);
// AppRegistry.registerHeadlessTask('RNFirebaseBackgroundMessage', () => task());
messaging().setBackgroundMessageHandler(async remoteMessage => {
  // Messaging.processMessage(remoteMessage);

  console.log(
    'Message handled in the background!',
    JSON.stringify(remoteMessage.data.notifyMessage),
  );

  let notificationText = '';
  if (remoteMessage && remoteMessage.data && remoteMessage.data.notifyMessage) {
    notificationText = remoteMessage.data.notifyMessage;
  }

  PushNotification.localNotification({
    /* Android Only Properties */
    id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
    ticker: 'My Notification Ticker', // (optional)
    autoCancel: true, // (optional) default: true
    largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
    smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
    // bigText: 'My big text that will be shown when notification is expanded', // (optional) default: "message" prop
    // subText: 'This is a subText', // (optional) default: none
    // color: 'red', // (optional) default: system default
    vibrate: true, // (optional) default: true
    vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
    // tag: 'some_tag', // (optional) add tag to message
    // group: 'group', // (optional) add group to message
    ongoing: false, // (optional) set whether this is an "ongoing" notification
    priority: 'high', // (optional) set notification priority, default: high
    visibility: 'private', // (optional) set notification visibility, default: private
    importance: 'high', // (optional) set notification importance, default: high
    allowWhileIdle: true, // (optional) set notification to work while on doze, default: false
    ignoreInForeground: false, // (optional) if true, the notification will not be visible when the app is in the foreground (useful for parity with how iOS notifications appear)

    /* iOS only properties */
    // alertAction: 'view', // (optional) default: view
    // category: '', // (optional) default: empty string
    // userInfo: {}, // (optional) default: {} (using null throws a JSON value '<null>' error)

    /* iOS and Android properties */
    title: 'Получен новый список', // (optional)
    message: notificationText, // (required)
    playSound: true, // (optional) default: true
    soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
  });
});

// const task = () => {
//   console.log('HEADLESS_TASK');
// };
